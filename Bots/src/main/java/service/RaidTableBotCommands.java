package service;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardButton;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboardMarkup;

import config.SQLraidtable;

public class RaidTableBotCommands extends TelegramLongPollingBot {
	//–ú–µ—Ç–æ–¥—ã –±–æ—Ç–∞
	public void sendMessage // <- –ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π message 
	(Message message, String textMessage, boolean disableWebPreview) { 
		try {
			execute(	
					SendMessage.builder()
					.chatId(message.getChatId())
					.parseMode("Markdown")
					.disableWebPagePreview(disableWebPreview)
					.text(textMessage)
					.build());
			}
				catch (TelegramApiException e) {
					e.printStackTrace();
			}
	}
	public void sendMessage // <- –ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π long chatId 
	(long chatId, String textMessage, boolean disableWebPreview) { 
		try {
			execute(	
					SendMessage.builder()
					.chatId(chatId)
					.parseMode("Markdown")
					.disableWebPagePreview(disableWebPreview)
					.text(textMessage)
					.build());
			}
				catch (TelegramApiException e) {
					e.printStackTrace();
			}
	}
	public void sendInlineKeyBoardMessageWithUrl // <- –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å URL-–∫–Ω–æ–ø–∫–æ–π 
	(long chatId, String textOnMessange, String textToKeyButton, String url, String callBackData) {
	     InlineKeyboardMarkup keyboard = new InlineKeyboardMarkup();
	     InlineKeyboardButton url_button = new InlineKeyboardButton();
	     
	     url_button.setText(textToKeyButton);
	     url_button.setCallbackData(callBackData);
	     url_button.setUrl(url);
	     
	     List<InlineKeyboardButton> keyboardButtonsRow = new ArrayList<>(); // –°–æ–∑–¥–∞–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–Ω–æ–ø–æ–∫
	     keyboardButtonsRow.add(url_button);
	     
	     List<List<InlineKeyboardButton>> rowList = new ArrayList<>(); // –°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏–∫—Å–∫–∞ –∫–Ω–æ–ø–æ–∫??
	     rowList.add(keyboardButtonsRow);
	     
	     keyboard.setKeyboard(rowList);
	     try {
			execute(
	    	SendMessage.builder()
			.chatId(chatId)
			.parseMode("Markdown")
			.text(textOnMessange)
			.replyMarkup(keyboard)
			.build());
	     }
			catch (TelegramApiException e) {
				e.printStackTrace();
			}
	      
	}
	public void sendInlineKeyBoardMessageWithOutUrl // <- –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–æ–π –∏ —Å—á–∏—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è 
	(long chatId, String textOnMessange, String textToKeyButton, String callBackData) {
	     InlineKeyboardMarkup keyboard = new InlineKeyboardMarkup();
	     InlineKeyboardButton button = new InlineKeyboardButton();
	     
	     button.setText(textToKeyButton);
	     button.setCallbackData(callBackData);
	     
	     List<InlineKeyboardButton> keyboardButtonsRow = new ArrayList<>(); // <- –°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏
	     keyboardButtonsRow.add(button);
	     
	     List<List<InlineKeyboardButton>> rowList = new ArrayList<>(); // <- –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∏–∑ –º–∞—Å—Å–∏–≤–∞ –∫–Ω–æ–ø–æ–∫
	     rowList.add(keyboardButtonsRow);
	     keyboard.setKeyboard(rowList);
	    
	     try {
			execute( 
	    	SendMessage.builder()
			.chatId(chatId)
			.parseMode("Markdown")
			.text(textOnMessange)
			.replyMarkup(keyboard)
			.build());
            
	     }
			catch (TelegramApiException e) {
				e.printStackTrace();
	}
	      
}
	public void ReplyKeyboardMarkup // <- –ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ (—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞...) 
	(String textOnKeyboard) { 
		ReplyKeyboardMarkup keyboard = new ReplyKeyboardMarkup(); // –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
		KeyboardButton keyboardButton = new KeyboardButton(textOnKeyboard); // –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ —Å —Ç–µ–∫—Å—Ç–æ–º
		
		List<KeyboardButton> keyboardButtonsRow = new ArrayList<>();
	    keyboardButtonsRow.add(keyboardButton);
		
	    List<List<KeyboardButton>> rowList = new ArrayList<>();
	    rowList.add(keyboardButtonsRow);
	     
		keyboard.setKeyboard(null);
	}

	//–î–∞–Ω–Ω—ã–µ –±–æ—Ç–∞
	@Override
	public String getBotUsername 	// <- –ò–º—è –±–æ—Ç–∞ 
	() { 	
		return "RaidTableBot"; // –¢–µ—Å—Ç
		// –û—Å–Ω–æ–≤–Ω–æ–π RaidTableBot
		// –¢–µ—Å—Ç VOITY_LIBRARY_BOT
	}
	@Override
	public String getBotToken 		// <- –¢–æ–∫–µ–Ω –±–æ—Ç–∞ 
	() { 		
		return "5539670323:AAFYwYhaOdgEGckDKh0LKYjeUMBPk0eXe6I"; 
		// –û—Å–Ω–æ–≤–Ω–æ–π 5539670323:AAFYwYhaOdgEGckDKh0LKYjeUMBPk0eXe6I
		// –¢–µ—Å—Ç 5480231142:AAHkTaPAXwjP4AMIDOS754DkgHCNRu5CrmU
	}
	@Override
	public void onUpdateReceived 	// <- –ü–æ–ª—É—á–µ–Ω–∏–µ –∏ —Ä–∞–±–æ—Ç–∞ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏ 
	(Update update) {
		boolean isAdmin = false;
        
        ////////// Update —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ /////////////  
        if (update.hasMessage()) 
        {	
        	Message command = update.getMessage();
        	long chatId = update.getMessage().getChatId(); 
            String userName = update.getMessage().getChat().getUserName();
            
            ///////// –ü–æ–ª—É—á–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ê–¥–º–∏–Ω–∞ ///////////
	        if (update.hasMessage() && userName.equals("oollEWREYlloo") || userName.equals("oolllEWREYllloo") || 			userName.equals("ivashchenkey") || userName.equals("w_e3e7n1qi") || userName.equals("eQuality3105"))
	        {
	        	
	        	if (update.getMessage().getText().equals("/admin")) 
	        	{
	        			isAdmin = true;
	        			adminAnswer(command);
	        	}
	        	else if (update.getMessage().getText().startsWith("/add"))
	        	{
	        			isAdmin = true;
	        			try {
							addAnswer(chatId, update);
						} catch (SQLException e) {
							
							e.printStackTrace();
						}
	        	}
	        	else if (update.getMessage().getText().startsWith("/delete"))
	        	{
	        		isAdmin = true;
	        		try {
						deleteAnswer(update);
					} catch (ClassNotFoundException | SQLException e) {
						// TODO –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã–π –±–ª–æ–∫ catch
						e.printStackTrace();
					}
	        	}
	        	else if (update.getMessage().getText().startsWith("/update"))
	        	{
	        		isAdmin = true;
	        		try {
						updateAnswer(update);
					} catch (ClassNotFoundException | SQLException e) {
						// TODO –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã–π –±–ª–æ–∫ catch
						e.printStackTrace();
					}
	        	}
	        			
	        	else {
	        			if (isAdmin == true)
	        			{
			            	isAdmin = false;
			            	defautAnswer(command);
		            	}
	        	}	
	        }
	    }
	        
	        /////////// –ê–ª–≥–æ—Ä–∏—Ç–º –¥–µ–π—Å—Ç–≤–∏–π –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç–µ–∫—Å—Ç–æ–º //////////// 
        	if (update.hasMessage() && update.getMessage().hasText()) {
        	Message command = update.getMessage();
        	long chatId = update.getMessage().getChatId(); 
            String name = update.getMessage().getChat().getFirstName();
	            
	            switch (update.getMessage().getText()) {
	            
		            case "/start":
		            	startAnswer(command, name);
		                break;
		                
		            case "/help":
		            	helpAnswer(command);
		            	break;
		            	
		            case "/rules":
		            	rulesAnswer(command);
		            	break;
		            	
		            case "/table":
		            	tableAnswer0(command, chatId);
		            	break;
		            	
		            default:
		            	if (isAdmin == false && (update.getMessage().getText().startsWith("/add ")) == false) 
		            	{
		            	defautAnswer(command);
		            	break;
		            	}
		     
			}
	        	}
        
        
        ///////////// –ê–ª–≥–æ—Ä–∏—Ç–º –¥–µ–π—Å—Ç–≤–∏–π –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ //////////////////////// 
        else if (update.hasCallbackQuery()) // <- –†–∞–±–æ—Ç–∞ —Å –æ—Ç–≤–µ—Ç–∞–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –±–µ–∑ URL
        {
        	if (update.getCallbackQuery().getData().equals("table0"))
	        		tableAnswer(update.getCallbackQuery().getMessage().getChatId());
        }
	}
		
	
	// –ú–µ—Ç–æ–¥—ã –¥–ª—è –∫–æ–º–∞–Ω–¥
	private void defautAnswer 	// <- –î–µ—Ñ–æ–ª—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç 
	(Message message) {
		String defautAnswerMessageText = 
				"*–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª, –Ω–æ –º–Ω–µ –æ—á–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ!*\n"
				+ " \n_–ü—Ä–æ–±–ª–µ–º—ã?_ –ò—Å–ø–æ–ª—å–∑—É–π - */help*";
		sendMessage (message, defautAnswerMessageText, true);
	}
	private void startAnswer 	// <- –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start 
	(Message message, String name) { 
		String startAnswerMessageText = 
				"_–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π –¥–æ—Ä–æ–≥–æ–π_ *"+name+"!* [ ](https://i.ibb.co/VM4vm0D/photo-2022-07-25-06-30-47.jpg)\n" // –∫–∞—Ä—Ç–∏–Ω–∫–∞ –±–æ—Ç–∞
				+ "\n–ú–µ–Ω—è –∑–æ–≤—É—Ç *@RaidTableBot* , –∏ —è –±—É–¥—É —Ç–≤–æ–∏–º –ø–æ–º–æ—â–Ω–∏–∫–æ–º –Ω–∞ —Ä–µ–π–¥–∞—Ö, –¥–∞–≤–∞–π –Ω–∞—á–Ω–µ–º! üî•\n"
				+ "\n_–ß—Ç–æ —è –¥–µ–ª–∞—é?_\n"
				+ "\n–Ø –º–æ–≥—É –ø–æ–∫–∞–∑–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –ª–∏–¥–µ—Ä–æ–≤, –∞ —Ç–∞–∫ –∂–µ –æ–±–Ω–æ–≤–ª—è—Ç—å –µ–µ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–µ –≤—ã—Ö–æ–¥—è –∏–∑ —Ç–µ–ª–µ–≥—Ä–∞–º–º–∞\n"
				+ "\n*–°–ø–∏—Å–æ–∫ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö –∫–æ–º–∞–Ω–¥*\n"
				+ "\n*/help* - –ø–æ–º–æ—â—å \n"
				+ "\n*/rules* - –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ —Ä–µ–π–¥–æ–≤\n"
				+ "\n*/table* - –ø–æ–∫–∞–∑–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –ª–∏–¥–µ—Ä–æ–≤\n"
				+ "\n*–¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è*\n"
				+ "_v.1.1.0 REALISE by_ [oolllEWREYllloo](https://t.me/oolllEWREYllloo)";
		sendMessage(message, startAnswerMessageText, false);
		
	}
	private void helpAnswer 	// <- –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –∫–æ–º–∞–Ω–¥—É /help 
	(Message message) {
		
		String helpAnswerMessageText = 
				"_–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?_ ü§® "
				+ "\n*–î–∞–≤–∞–π –ø–æ–∫–∞–∂—É!*\n"
				+ "\n- –ö–æ–º–∞–Ω–¥–∞ */rules* - –ø–æ–∫–∞–∂–µ—Ç –ø—Ä–∞–≤–∏–ª–∞ —Ä–µ–π–¥–∞\n"
				+ "\n- –ö–æ–º–∞–Ω–¥–∞ */start* - –ø–æ–∫–∞–∂–µ—Ç –≤–µ—Ä–Ω–µ—Ç —Ç–µ–±—è –æ–±—Ä–∞—Ç–Ω–æ –∫ –ø—Ä–∏–≤–µ—Ç—Å–≤–µ–Ω–Ω–æ–º—É –æ–∫–Ω—É\n "
				+ "\n- –ö–æ–º–∞–Ω–¥–∞ */table* - –ø–æ–∫–∞–∂–µ—Ç —Ç–µ–±–µ —Ç–∞–±–ª–∏—Ü—É –ª–∏–¥–µ—Ä–æ–≤\n"
				+ "\n- –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª - [Crazy Panda Village](https://t.me/crazypandaton)\n"
				+ "\n- –°—Å—ã–ª–∫–∞ –Ω–∞ [—á–∞—Ç](https://t.me/crazypandachat)";
		sendMessage(message, helpAnswerMessageText, true);
	}
	private void rulesAnswer 	// <- –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –∫–æ–º–∞–Ω–¥—É /rules 
	(Message message) { 
		String rulesAnswerMessageText = 
				 "–ò—Ç–∞–∫, *—Ä–µ–π–¥* - —ç—Ç–æ –ø—Ä–µ–∂–¥–µ –≤—Å–µ–≥–æ –∫–∞–∫–∞—è-—Ç–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –¥—Ä—É–≥–∏—Ö —á–∞—Ç–∞—Ö –∏–ª–∏ –ø–æ–¥ –ø–æ—Å—Ç–∞–º–∏, –∑–¥–µ—Å—å –≤—Å–µ –º—ã –±—É–¥–µ–º –∑–∞–Ω–∏–º–∞—Ç—å—Å—è –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ–º –±—Ä–µ–Ω–¥–∞ *Crazy Panda Village* –Ω–µ –∑–∞–º–µ—Ç–Ω–æ, –Ω–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ\n"
				+ "\nüõ° *–ü—Ä–∞–≤–∏–ª–∞ —Ä–µ–π–¥–∞* üõ°\n"
				+ "\n–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –ø–æ–ª–Ω–æ–ø—Ä–∞–≤–Ω—ã–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –ª—é–±–æ–≥–æ —Ä–µ–π–¥–∞, –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:\n"
				+ "\n_- –ü–æ–¥ –ø–æ—Å—Ç–æ–º-–æ–±—å—è–≤–ª–µ–Ω–∏–∏ –æ —Ä–µ–π–¥–µ –Ω–∞–ø–∏—Å–∞—Ç—å \"+\"_\n"
				+ "_- –ü–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞ –∞–≤–∞—Ç–∞—Ä–∫—É –∞–∫–∫–∞—É–Ω—Ç–∞ –ª—é–±—É—é –ø–∞–Ω–¥—É –∏–∑_ [—Å–ø–∏—Å–∫–∞](https://drive.google.com/drive/folders/1PVuthIhgrT1lxjwnSX0mMHDG3SI6i-Tu?usp=sharing)\n"
				+ "_- –ü–æ—Å—Ç–∞–≤–∏—Ç—å –≤ –±–∏–æ (–≥—Ä–∞—Ñ—É –æ —Å–µ–±–µ) –∞–∫–∫–∞—É–Ω—Ç–∞ –Ω–∞—à —é–∑–µ—Ä–Ω–µ–π–º_ *@crazypandaton* _–∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª https://t.me/crazypandaton_\n"
				+ "_- –ù–µ –≥–æ–≤–æ—Ä–∏—Ç—å –æ Crazy Panda Village –≤ —á–∞—Ç–µ_\n"
				+ "_- –û–±—â–∞—Ç—å—Å—è –ø–æ —Ç–µ–º–∞–º —á–∞—Ç–∞ –≥–¥–µ –∏–¥–µ—Ç —Ä–µ–π–¥_\n"
				+ "_- –°—Ç–∞—Ä–∞—Ç—å—Å—è –Ω–µ –º–∞—Ç—é–∫–∞—Ç—å—Å—è, –µ—Å–ª–∏ –≤ —á–∞—Ç–µ –µ—Å—Ç—å —Ü–µ–Ω–∑—É—Ä–∞_\n"
				+ "*- –ë—ã—Ç—å –≥–æ—Ç–æ–≤—ã–º –Ω–∞–≤–æ–¥–∏—Ç—å —Å—É–µ—Ç—É* üòé";
		sendMessage(message, rulesAnswerMessageText, true);
	}
	private void tableAnswer0 	// <- –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –∫–æ–º–∞–Ω–¥—É /table  
	(Message message, long chatId) {
		String textMessage = 
				"üèÜ *–•–æ—á–µ—à—å –ø–æ–≥–ª—è–¥–µ—Ç—å –Ω–∞ —Ç–∞–±–ª–∏—Ü—É –ª–∏–¥–µ—Ä–æ–≤?* üèÜ\n"
				+ "–¢—ã –ø–æ–ø–∞–ª –≤ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª\n"
				+ "\n–°–µ–π—á–∞—Å —Ç—ã —É–≤–∏–¥–∏—à—å –∏–º—è, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤ –∏ –º–µ—Å—Ç–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏\n"
				+ "\n–û—Å—Ç–∞–ª–æ—Å—å —Ç–æ–ª—å–∫–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É\n"
				+ "\n_(–µ—Å–ª–∏ —Ä—è–¥–æ–º —Å –º–µ—Å—Ç–æ–º —Ç—ã –≤–∏–¥–∏—â—å üêº –∏ —É —Ç–µ–±—è –±–æ–ª—å—à–µ 1 –±–∞–ª–ª–∞, —Ç–æ —Ç—ã –ø—Ä–µ—Ç–µ–Ω–¥—É–µ—à—å –Ω–∞ NFT)_";
		String textOnButton = "–ü–æ–∫–∞–∑–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É üèÜ";
		String callBackData = "table0";
		
		sendInlineKeyBoardMessageWithOutUrl(chatId, textMessage, textOnButton, callBackData);
	}
	private void tableAnswer	// <- –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ –≤ /table 
	(long chatId) {
			String table = SQLraidtable.table.toString();
			sendMessage(chatId, table, false);
		}
	
	private void adminAnswer 	// <- –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –∫–æ–º–∞–Ω–¥—É /admin
	(Message message) {
		String text = "*–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤ –∞–¥–º–∏–Ω.–ø–∞–Ω–µ–ª–∏*"
					+ "\n–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–∞–≤–æ—Å—É–¥–∏—è:\n"
					+ "\n*/update (–∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–µ–∑ @) {–∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤}* - –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–∞–±–ª–∏—Ü–µ\n"
					+ "\n*/add (–∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–µ–∑ @) {–∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤}* - –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–∞–±–ª–∏—Ü—É\n"
					+ "\n*/delete (–∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–µ–∑ @)* - –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ç–∞–±–ª–∏—Ü—ã\n"
					+ "\n–ü–∏—à–∏ –∫–æ–º–∞–Ω–¥—ã —Ç–æ–ª—å–∫–æ –ø–æ —à–∞–±–ª–æ–Ω—É, –∏–Ω–∞—á–µ —Ç–µ–±—è –Ω–∞—Å—Ç–∏–≥–Ω–µ—Ç –∫–∞—Ä–∞!\n"
					+ "\n*–î–∞ –ø—Ä–∏–±—É–¥–µ—Ç —Å —Ç–æ–±–æ–π —Å–∏–ª–∞!*";
		sendMessage(message, text, false);
	}
	private void addAnswer 		// <- –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –∫–æ–º–∞–Ω–¥—É /add (name) {points} 
	(long chatId, Update update) throws SQLException {
		String command = update.getMessage().getText();
		String messageName = "";
		
		char[] arrayOfCommand = command.toCharArray();
    	char first0 = '(';
    	char second0 = ')';
    	char third0 = '{';
    	char fourth0 = '}';
    	int index1 = 0;
    	int index2 = 0;
    	int index3 = 0;
    	int index4 = 0;
    	
    	for(int i = 0; i<arrayOfCommand.length; i++)
    	{
    		if (command.charAt(i) == first0)
    		{
    			index1 = i;
    		}
    		else if (command.charAt(i) == second0)
    		{
    			index2 = i;
    		}
    		else if (command.charAt(i) == third0)
    		{
    			index3 = i;
    		}
    		else if (command.charAt(i) == fourth0)
    		{
    			index4 = i;
    		}
    	}
    	
    	char[] arrayName = new char[index2-index1-1]; 
    	char[] arrayPoints = new char[index4-index3-1];
    	
    	for (int i = 0; i<arrayName.length; i++)
    	{
    		if (i<index2-1)
    			arrayName[i] = arrayOfCommand[index1+1+i];
    		else 
    			arrayName[i] = arrayOfCommand[index2-1-i];
    	}
    	String name = new String(arrayName);
    	
    	
    	for (int i = 0; i<arrayPoints.length; i++)
    	{
    		if (i<index2-1)
    			arrayPoints[i] = arrayOfCommand[index3+1+i];
    		else 
    			arrayPoints[i] = arrayOfCommand[index4-1-i];
    	}
    	int points = Integer.parseInt(new String (arrayPoints));
    	
    	sendMessage(chatId, "–ö–æ–º–∞–Ω–¥–∞ –ø—Ä–∏–Ω—è—Ç–∞, –∏–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏ –≤–Ω–µ—Å–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–∞–±–ª–∏—Ü—É!", false);
    	
    	if(SQLraidtable.addUser(name, points) == true) {
        messageName = 
                		"*–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - "+name+"*\n"
                		+ "\n–£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!\n";
        	sendMessage(chatId, messageName, false);
    	}
    	else 
    	{
    		messageName = "–û—à–∏–±–∫–∞ SQL, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω";
                sendMessage(chatId, messageName, false);
    	}
    			SQLraidtable.table.clear();
                sendMessage(chatId, "–¢–∞–±–ª–∏—Ü–∞ –æ—á–∏—â–µ–Ω–∞", false);
                
        		try {
        			SQLraidtable.getAllTableSortByPoints("\n\n–ò–º—è - @", " , –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤ - ");
        			sendMessage(chatId, "–ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω", false);
				} catch (SQLException e) {
					sendMessage(chatId, "*–û–®–ò–ë–ö–ê* -> –ó–∞–ø—Ä–æ—Å –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω!", false);
					e.printStackTrace();
				}
        		
    			sendMessage(chatId, 
    				"–ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞, –µ—Å–ª–∏ –≤—ã –Ω–µ —É–≤–∏–¥–µ–ª–∏ –∑–∞–ø–∏—Å—å –æ–± —É—Å–ø–µ—à–Ω–æ–º –≤–Ω–µ—Å–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞\n"
    				+ "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å - */table*", false);
	}
	private void deleteAnswer 	// <- –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –∫–æ–º–∞–Ω–¥—É /delete (name) 
	(Update update) throws ClassNotFoundException, SQLException{
		String command = update.getMessage().getText();
		String messageText = "";
		
		char[] arrayOfCommand = command.toCharArray();
    	char first0 = '(';
    	char second0 = ')';
    	int index1 = 0;
    	int index2 = 0;
    	
    	for(int i = 0; i<arrayOfCommand.length; i++)
    	{
    		if (command.charAt(i) == first0)
    		{
    			index1 = i;
    		}
    		else if (command.charAt(i) == second0)
    		{
    			index2 = i;
    		}
    	}
    	
    	char[] arrayName = new char[index2-index1-1]; 
    	
    	for (int i = 0; i<arrayName.length; i++)
    	{
    		if (i<index2-1)
    			arrayName[i] = arrayOfCommand[index1+1+i];
    		else 
    			arrayName[i] = arrayOfCommand[index2-1-i];
    	}
    	String name = new String(arrayName);
    	
    	
    	if (SQLraidtable.deleteUser(name) == true) {
    		messageText = "*–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - "+name+" —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!*\n";
    		sendMessage(update.getMessage().getChatId(), messageText, false);
    		
    		SQLraidtable.table.clear();
            
            sendMessage(update.getMessage().getChatId(), "–¢–∞–±–ª–∏—Ü–∞ –æ—á–∏—â–µ–Ω–∞", false);
            SQLraidtable.getAllTableSortByPoints("\n\n–ò–º—è - @", " , –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤ - ");
    		sendMessage(update.getMessage().getChatId(), "–ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω", false);
    	}
    	else 
    	{
    		messageText = "*–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ SQL*\n"
    					+ "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —É–¥–∞–ª–µ–Ω";
    		sendMessage(update.getMessage().getChatId(), messageText, false);
    	}
	}
	private void updateAnswer 	// <- –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –∫–æ–º–∞–Ω–¥—É /update (name) {points}
	(Update update) throws ClassNotFoundException, SQLException{
		String command = update.getMessage().getText();
		String messageText = "";
		
		char[] arrayOfCommand = command.toCharArray();
    	char first0 = '(';
    	char second0 = ')';
    	char third0 = '{';
    	char fourth0 = '}';
    	int index1 = 0;
    	int index2 = 0;
    	int index3 = 0;
    	int index4 = 0;
    	
    	for(int i = 0; i<arrayOfCommand.length; i++)
    	{
    		if (command.charAt(i) == first0)
    		{
    			index1 = i;
    		}
    		else if (command.charAt(i) == second0)
    		{
    			index2 = i;
    		}
    		else if (command.charAt(i) == third0)
    		{
    			index3 = i;
    		}
    		else if (command.charAt(i) == fourth0)
    		{
    			index4 = i;
    		}
    	}
    	
    	char[] arrayName = new char[index2-index1-1]; 
    	char[] arrayPoints = new char[index4-index3-1];
    	
    	for (int i = 0; i<arrayName.length; i++)
    	{
    		if (i<index2-1)
    			arrayName[i] = arrayOfCommand[index1+1+i];
    		else 
    			arrayName[i] = arrayOfCommand[index2-1-i];
    	}
    	String name = new String(arrayName);
    	
    	
    	for (int i = 0; i<arrayPoints.length; i++)
    	{
    		if (i<index2-1)
    			arrayPoints[i] = arrayOfCommand[index3+1+i];
    		else 
    			arrayPoints[i] = arrayOfCommand[index4-1-i];
    	}
    	int points = Integer.parseInt(new String (arrayPoints));
    	
    	sendMessage(update.getMessage().getChatId(), "–ö–æ–º–∞–Ω–¥–∞ –ø—Ä–∏–Ω—è—Ç–∞, –∏–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏ –≤–Ω–µ—Å–µ–Ω–∏–µ –≤ —Ç–∞–±–ª–∏—Ü—É!", false);
    	
		if (SQLraidtable.updatePoints(name, points) == true)
		{
			messageText = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –±–∞–ª–ª—ã  - "+name+", —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –Ω–∞ *"+points+"*";
			sendMessage(update.getMessage().getChatId(), messageText, false);
		}
		else 
		{
			messageText = "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ SQL";
			sendMessage(update.getMessage().getChatId(), messageText, false);
		}
		
		SQLraidtable.table.clear();
        
        sendMessage(update.getMessage().getChatId(), "–¢–∞–±–ª–∏—Ü–∞ –æ—á–∏—â–µ–Ω–∞", false);
        SQLraidtable.getAllTableSortByPoints("\n\n–ò–º—è - @", " , –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤ - ");
		sendMessage(update.getMessage().getChatId(), "–ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω", false);
		
		sendMessage(update.getMessage().getChatId(), 
				"–ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞, –µ—Å–ª–∏ –≤—ã –Ω–µ —É–≤–∏–¥–µ–ª–∏ –∑–∞–ø–∏—Å—å –æ–± —É—Å–ø–µ—à–Ω–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –±–∞–ª–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞\n"
				+ "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å - */table*", false);
	}
}
